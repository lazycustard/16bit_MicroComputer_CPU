$date
	Fri Oct 24 15:16:57 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module CPU_tb $end
$var wire 16 ! out_led [15:0] $end
$var wire 16 " in_reg_out [15:0] $end
$var wire 1 # Zero $end
$var wire 16 $ REG_B_out [15:0] $end
$var wire 16 % REG_A_out [15:0] $end
$var wire 16 & PC_out [15:0] $end
$var wire 16 ' IR_out [15:0] $end
$var wire 1 ( Carry $end
$var wire 16 ) ALU_out [15:0] $end
$var reg 1 * clk $end
$var reg 16 + in_data [15:0] $end
$var reg 1 , reset $end
$scope module cpu $end
$var wire 16 - ALU_out [15:0] $end
$var wire 1 ( Carry $end
$var wire 16 . IR_out [15:0] $end
$var wire 16 / PC_out [15:0] $end
$var wire 16 0 REG_A_out [15:0] $end
$var wire 16 1 REG_B_out [15:0] $end
$var wire 1 # Zero $end
$var wire 1 * clk $end
$var wire 1 , reset $end
$var wire 16 2 RAM_data [15:0] $end
$var wire 16 3 IN_REG_out [15:0] $end
$var reg 16 4 ALU_result [15:0] $end
$var reg 1 5 Carry_flag $end
$var reg 16 6 IR [15:0] $end
$var reg 16 7 PC [15:0] $end
$var reg 16 8 RAM_addr [15:0] $end
$var reg 16 9 REG_A [15:0] $end
$var reg 16 : REG_B [15:0] $end
$var reg 1 ; Zero_flag $end
$var reg 16 < out_led [15:0] $end
$scope module ram_inst $end
$var wire 16 = addr [15:0] $end
$var reg 16 > data [15:0] $end
$upscope $end
$upscope $end
$scope module in_reg $end
$var wire 16 ? D [15:0] $end
$var wire 1 * clk $end
$var reg 16 @ Q [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx @
b0 ?
b1000000001000 >
b0 =
b0 <
0;
b0 :
b0 9
b0 8
b0 7
b0 6
05
b0 4
bx 3
b1000000001000 2
b0 1
b0 0
b0 /
b0 .
b0 -
1,
b0 +
0*
b0 )
0(
b0 '
b0 &
b0 %
b0 $
0#
bx "
b0 !
$end
#5000
b0 "
b0 3
b0 @
1*
#10000
0*
#15000
b1 &
b1 /
b1 7
b1000000001000 '
b1000000001000 .
b1000000001000 6
1*
0,
#20000
0*
#25000
b10000000000011 2
b10000000000011 >
b10 &
b10 /
b10 7
b1 8
b1 =
1*
#30000
0*
#35000
b11000000000000 2
b11000000000000 >
b11 &
b11 /
b11 7
b10000000000011 '
b10000000000011 .
b10000000000011 6
b10 8
b10 =
1*
#40000
0*
#45000
b100000000000000 2
b100000000000000 >
b100 &
b100 /
b100 7
b11000000000000 '
b11000000000000 .
b11000000000000 6
b11 8
b11 =
1*
#50000
0*
#55000
b1000000001000 2
b1000000001000 >
1#
1;
b101 &
b101 /
b101 7
b100000000000000 '
b100000000000000 .
b100000000000000 6
b100 8
b100 =
b10100 "
b10100 3
b10100 @
1*
b10100 +
b10100 ?
#60000
0*
#65000
b10000000000011 2
b10000000000011 >
b110 &
b110 /
b110 7
b1000000001000 '
b1000000001000 .
b1000000001000 6
b101 8
b101 =
1*
#70000
0*
#75000
b101000000000000 2
b101000000000000 >
b10100 %
b10100 0
b10100 9
b111 &
b111 /
b111 7
b10000000000011 '
b10000000000011 .
b10000000000011 6
b110 8
b110 =
1*
#80000
0*
#85000
b100000000000000 2
b100000000000000 >
b10100 $
b10100 1
b10100 :
b1000 &
b1000 /
b1000 7
b101000000000000 '
b101000000000000 .
b101000000000000 6
b111 8
b111 =
1*
#90000
0*
#95000
b1000000001000 2
b1000000001000 >
b1001 &
b1001 /
b1001 7
b100000000000000 '
b100000000000000 .
b100000000000000 6
b1000 8
b1000 =
b110 "
b110 3
b110 @
1*
b110 +
b110 ?
#100000
0*
#105000
b10000000000011 2
b10000000000011 >
b10100 !
b10100 <
b1010 &
b1010 /
b1010 7
b1000000001000 '
b1000000001000 .
b1000000001000 6
b1001 8
b1001 =
1*
#110000
0*
#115000
b110000000000000 2
b110000000000000 >
b110 %
b110 0
b110 9
b1011 &
b1011 /
b1011 7
b10000000000011 '
b10000000000011 .
b10000000000011 6
b1010 8
b1010 =
1*
#120000
0*
#125000
b100000000000000 2
b100000000000000 >
b110 $
b110 1
b110 :
b1100 &
b1100 /
b1100 7
b110000000000000 '
b110000000000000 .
b110000000000000 6
b1011 8
b1011 =
1*
#130000
0*
#135000
b1000000001000 2
b1000000001000 >
0#
0;
b100100 )
b100100 -
b100100 4
b1101 &
b1101 /
b1101 7
b100000000000000 '
b100000000000000 .
b100000000000000 6
b1100 8
b1100 =
b11000000000000 "
b11000000000000 3
b11000000000000 @
1*
b11000000000000 +
b11000000000000 ?
#140000
0*
#145000
b10000000000011 2
b10000000000011 >
b110 !
b110 <
b1110 &
b1110 /
b1110 7
b1000000001000 '
b1000000001000 .
b1000000001000 6
b1101 8
b1101 =
1*
#150000
0*
#155000
b111000000000000 2
b111000000000000 >
b11000000000000 %
b11000000000000 0
b11000000000000 9
b1111 &
b1111 /
b1111 7
b10000000000011 '
b10000000000011 .
b10000000000011 6
b1110 8
b1110 =
1*
#160000
0*
#165000
b100000000000000 2
b100000000000000 >
b11000000000000 $
b11000000000000 1
b11000000000000 :
b10000 &
b10000 /
b10000 7
b111000000000000 '
b111000000000000 .
b111000000000000 6
b1111 8
b1111 =
1*
#170000
0*
#175000
b1000000001000 2
b1000000001000 >
b1 )
b1 -
b1 4
b10001 &
b10001 /
b10001 7
b100000000000000 '
b100000000000000 .
b100000000000000 6
b10000 8
b10000 =
b100000000000000 "
b100000000000000 3
b100000000000000 @
1*
b100000000000000 +
b100000000000000 ?
#180000
0*
#185000
b10000000000011 2
b10000000000011 >
b11000000000000 !
b11000000000000 <
b10010 &
b10010 /
b10010 7
b1000000001000 '
b1000000001000 .
b1000000001000 6
b10001 8
b10001 =
1*
#190000
0*
#195000
b1000000000000000 2
b1000000000000000 >
b100000000000000 %
b100000000000000 0
b100000000000000 9
b10011 &
b10011 /
b10011 7
b10000000000011 '
b10000000000011 .
b10000000000011 6
b10010 8
b10010 =
1*
#200000
0*
#205000
b100000000000000 2
b100000000000000 >
b100000000000000 $
b100000000000000 1
b100000000000000 :
b10100 &
b10100 /
b10100 7
b1000000000000000 '
b1000000000000000 .
b1000000000000000 6
b10011 8
b10011 =
1*
#210000
0*
#215000
b1111000000000000 2
b1111000000000000 >
1#
1;
b0 )
b0 -
b0 4
b10101 &
b10101 /
b10101 7
b100000000000000 '
b100000000000000 .
b100000000000000 6
b10100 8
b10100 =
1*
#220000
0*
#225000
bx 2
bx >
b100000000000000 !
b100000000000000 <
b10110 &
b10110 /
b10110 7
b1111000000000000 '
b1111000000000000 .
b1111000000000000 6
b10101 8
b10101 =
1*
#230000
0*
#235000
